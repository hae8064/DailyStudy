1. import / export
- ES6에서 새롭게 도입된 키워드
- JS의 ES6문법으로 다른 패키지 안에 있는 클래스, 메소드, 변수 등의 데이터를 사용하고자 할 때 쓰는 키워드
- 단일 객체 내보내기
    - export default = variable
- 복수 객체 내보내기
    - export variable
1. require / exports
- CommonJS키워드
- CommonJS에서 사용하는 모듈을 불러오는 키워드
- 단일 객체 내보내기
    - module.exports = variable
- 복수 객체 내보내기
    - exports.variable = variable

1. 정리
- Babel과 같은 ES6코드를 변환해주는 도구 없이는 import 키워드를 사용할 수 없어 require키워드를 사용해야 한다.
- 번들링을 위해 사용하는 webpack은 node.js환경에서 구동하므로 require을 사용해야 한다. 따라서 리액트 라이브러리를 사용할 때는 import 구문이 사용이 된다. 그 이유는 babel에서 import 구문을 require구문으로 변환해주기 떄문에…
- 하나의 프로그램에서 두 키워드를 동시에 사용할 수 없다.
- import()는 사용자가 필요한 모듈 부분만 선택하고, 로드 할 수있다.
    
    require보다 성능이 우수
    
- import 사용하려면 module type을 추가해야한다.

```jsx
//package.json
"type": "module"

//코드 상단에 하단 require함수 추가
import { createRequire } from "module";
const require = createRequire(import.meta.url);
```
